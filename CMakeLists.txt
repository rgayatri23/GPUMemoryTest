cmake_minimum_required (VERSION 3.12 FATAL_ERROR)
project (GPUMemoryTests LANGUAGES CXX CUDA VERSION 0.0.1)
find_package(CUDA 10.1 REQUIRED)

cuda_add_executable(cmake_axpy.ex axpy.cu)

if(${CMAKE_SOURCE_DIR} STREQUAL ${CMAKE_BINARY_DIR})
  message(STATUS "WARNING - DO not build in the same dir as the source")
else()
  message(STATUS "Building the binary files in ${CMAKE_BINARY_DIR}")
endif()

option(PINNED_MEMORY "PINNED MEMORY" OFF)
option(MANAGED_MEMORY "MANAGED MEMORY" OFF)
option(ZERO_COPY "ZERO COPY" OFF)
option(HOST_PAGEABLE_AND_DEVICE_MEMORY "HOST_PAGEABLE_AND_DEVICE_MEMORY " OFF)
option(CHECK_CORRECTNESS "CHECK CORRECTNESS " ON)
option(TIMEMORY_PROFILE "Enable timemory" OFF)
set(CMAKE_VERBOSE_MAKEFILE ON)

target_include_directories(cmake_axpy.ex PUBLIC ${CUDA_TOOLKIT_ROOT_DIR}/samples/common/inc)

if(PINNED_MEMORY)
    add_compile_definitions(USE_PINNED_MEMORY)
elseif(MANAGED_MEMORY)
    add_compile_definitions(USE_MANAGED_MEMORY)
elseif(ZERO_COPY)
    add_compile_definitions(USE_ZERO_COPY)
  elseif(HOST_PAGEABLE_AND_DEVICE_MEMORY)
    add_compile_definitions(USE_HOST_PAGEABLE_AND_DEVICE_MEMORY)
else()
  add_compile_definitions(RUN_ALL)
endif()
if(CHECK_CORRECTNESS)
    add_compile_definitions(VERIFY_GPU_CORRECTNESS)
endif()

# if TIMEMORY option is enabled
if(TIMEMORY_PROFILE)
    add_compile_definitions(USE_TIMEMORY)
    target_include_directories(cmake_axpy.ex PUBLIC /project/projectdirs/m1759/timemory/corigpu/include)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DTIMEMORY_USE_CUDA")
endif()
